#!/usr/bin/env python2

from __future__ import print_function

import argparse
import cv2
import os
import re
import sys

PROG_NAME = os.path.basename(sys.argv[0])

def die(msg):
    print('{}: error: {}'.format(PROG_NAME, msg), file=sys.stderr)
    sys.exit(1)

def parse_args():
    p = argparse.ArgumentParser()
    p.add_argument('operation')
    p.add_argument('src_filename')
    p.add_argument('dest_filename')
    return p.parse_args()

def main():
    args = parse_args()

    src_filename = args.src_filename
    dest_filename = args.dest_filename
    operation = args.operation

    if re.search('grayscale', dest_filename):
        imread_flags = cv2.IMREAD_GRAYSCALE
    else:
        imread_flags = cv2.IMREAD_COLOR

    img = cv2.imread(src_filename, imread_flags)

    match = re.search(r'(\d+)x(\d+)', dest_filename)
    if match is None:
        die('dest_filename {!r} contains no size'.format(dest_filename))

    width = int(match.groups(0)[0])
    height = int(match.groups(0)[1])

    if operation == 'scale':
        res = cv2.resize(img, (width, height), interpolation = cv2.INTER_CUBIC)
    else:
        die('invalid operation: {!r}'.format(dest_filename))

    cv2.imwrite(dest_filename, res)

if __name__ == '__main__':
    main()
